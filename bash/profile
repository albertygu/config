# -*- mode: sh -*-

################################################################
### Environment

MY_GUIX_PROFILE_NAMES="emacs games build misc main"

export MY_CONFIG_DIR="$HOME/config"
export MY_CONFIG_GUIX_DIR="$MY_CONFIG_DIR/guix"
export MY_PROGS_DIR="$HOME/progs"
export MY_GUILE_DIR="$MY_PROGS_DIR/guile/modules"
export MY_GUILE_GUIX_DIR="$MY_CONFIG_GUIX_DIR/modules"

export MY_GUIX_PROFILES_DIR="$HOME/.guix-profiles"
export MY_GUIX_USER_PROFILE_DIR="$MY_GUIX_PROFILES_DIR/main/main"
export MY_GUIX_SYSTEM_PROFILE_DIR="/run/current-system/profile"

add_dir_to_var_if_exists () {
    # Add directory $1 (if it exists) to environment variable $2.
    [ -d "$1" ] && eval $(echo "$2=$1:\$$2")
}

display_file_if_exists () {
    [ -a "$1" ] && echo "$1"
}

display_guix_profiles_paths () {
    display_file_if_exists "$MY_GUIX_SYSTEM_PROFILE_DIR"
    for name in $MY_GUIX_PROFILE_NAMES
    do
        display_file_if_exists "$MY_GUIX_PROFILES_DIR/$name/$name"
    done
}

display_guix_env () {
    env_cmd="guix package --search-paths"
    for path in $(display_guix_profiles_paths)
    do
        env_cmd="$env_cmd --profile='$path'"
        add_dir_to_var_if_exists "$path/share" xdg_data_dirs
        add_dir_to_var_if_exists "$path/etc/xdg" xdg_config_dirs
    done
    eval $(echo $env_cmd)
    echo "export XDG_DATA_DIRS=$xdg_data_dirs"
    echo "export XDG_CONFIG_DIRS=$xdg_config_dirs"
}

# Calculate environment for all Guix profiles.
eval $(display_guix_env)

if [ -d $MY_GUIX_SYSTEM_PROFILE_DIR ]; then   # if it is GuixSD
    export PATH="/run/setuid-programs:$PATH"
    export GIT_SSL_NO_VERIFY=1

    # Ignore EMACSLOADPATH defined by "/etc/profile" because I know
    # better what I want to load.
    export EMACSLOADPATH=
fi

if [ -d $MY_GUIX_USER_PROFILE_DIR ]; then
    # Without this, other git outputs (like 'send-email') wouldn't work.
    export GIT_EXEC_PATH="$MY_GUIX_USER_PROFILE_DIR/libexec/git-core"

    aspell_dir="$MY_GUIX_USER_PROFILE_DIR/lib/aspell"
    if [ -d $aspell_dir ]; then
        # export ASPELL_CONF="data-dir $aspell_dir; dict-dir $aspell_dir"
        export ASPELL_CONF="dict-dir $aspell_dir"
    fi
fi

export PATH="$HOME/bin:$PATH"
export SSH_AUTH_SOCK="$HOME/.gnupg/S.gpg-agent.ssh"
export GUIX_PACKAGE_PATH="$MY_CONFIG_GUIX_DIR/guix-package-path"

export GUILE_LOAD_PATH="$MY_GUILE_DIR:$MY_GUILE_GUIX_DIR:$HOME/devel/guix:$HOME/devel/shepherd/modules:$GUILE_LOAD_PATH"
export GUILE_LOAD_COMPILED_PATH=$GUILE_LOAD_PATH

export EDITOR='emacsclient'
export VIEWER='emacsclient'

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# Prevent sox from using pulseaudio.
export AUDIODRIVER=alsa
# Without this, there is no sound in programs (usually games) that use
# sdl-mixer (at least on GuixSD).
export SDL_AUDIODRIVER=alsa

################################################################

[[ -f ~/.bashrc ]] && . ~/.bashrc

# Start shepherd if it is not running.  Some daemons sometimes need
# DISPLAY (for example, irexec needs it for starting tvtime)
[[ -z $(pgrep -U $(id --user) shepherd) ]] \
    && DISPLAY=:0 shepherd &>> $HOME/.config/shepherd/shepherd.log
